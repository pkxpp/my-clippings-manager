package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _angular_file_upload_min_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3b\x6b\x73\xdb\x38\x92\xdf\xf3\x2b\x64\x5e\x4a\x21\x23\x9a\x92\x77\x6f\xbf\x50\xcb\x51\xe5\xf2\xb8\x99\x2a\x67\x32\x97\x78\x76\xb7\xca\xf1\xa9\x40\x12\x94\x18\x53\xa4\x8e\x0f\x67\x7c\xb6\xfe\xfb\x75\xe3\x41\x02\x20\x64\x7b\x32\x8f\xaa\xcb\x87\x88\x04\x1b\x8d\xee\x46\xbf\x01\xcf\x5f\x3e\x9b\x90\x72\xd3\x15\xa4\x3e\xcd\xf2\x82\x9e\x76\xfb\xa2\x22\xe9\xe4\xe6\x2c\x38\x0b\xfe\xf6\x6c\xb2\x6d\xdb\x7d\x13\xce\xe7\x9b\xbc\xdd\x76\x71\x90\x54\xbb\x79\x49\xeb\x9b\xcd\x76\x6e\x99\xf5\xec\xe5\xfc\xd9\x49\xd6\x95\x49\x9b\x57\xa5\x4b\xfc\xd8\xbb\xab\x69\xdb\xd5\xa5\x23\x07\x9d\x28\x6a\x6f\xf7\xb4\xca\x26\x29\xcd\xf2\x92\x4e\xa7\xfc\x37\x20\xbb\x74\xe5\xf2\x67\xd7\xb1\xa0\x76\xfc\x4b\x39\xec\x5c\xf9\xc3\x1a\x72\x85\x49\x0c\xcf\x07\xcf\xbf\xa9\xf2\x74\xb2\xf0\x42\xf6\xea\x3a\x5d\xc9\x71\xa6\xc3\xc2\x02\xcb\xaa\xec\x8a\x22\x14\x2f\x1a\xc2\x1b\x52\x4f\xe2\x88\x04\xbb\x2a\xed\x8a\x81\x9a\x77\x40\xcc\xcf\x92\x96\x2b\x6f\x29\xd7\x0d\x6e\x48\xd1\x01\x58\xd6\x7f\xa7\xf5\x87\x3d\x22\x6b\x1c\xff\xae\xab\x8b\xd0\x99\x3b\x3e\x29\x72\xd2\x84\x0c\xc8\xf1\xb7\x14\x81\x9a\xf0\xee\xe0\xff\x4f\x47\x3b\x1a\x5e\x5e\xf9\xfb\xba\xda\xd4\xb4\x69\xc2\x85\x4f\xba\xb6\xe2\x98\xc2\x93\x33\xbf\xa6\xbb\xea\x86\xbe\xca\x5a\x5a\x0f\x83\x3b\xda\x6e\xab\x34\x74\x7e\xfa\xf0\xe9\xc2\xf1\x01\x6b\x8b\xf8\x00\x4d\x56\xd5\xbb\x37\xa4\x25\xf8\xcc\x70\x9f\xe7\xbb\xbc\x0d\x7f\xec\x76\x31\xad\x83\xf7\xaf\xfe\xb5\xfe\xc7\xab\xf3\x9f\xdf\xfa\x5f\x61\x3f\x5f\xd7\x34\xa5\x65\x9b\x93\xa2\x01\x9c\x07\x2f\xc8\x48\xd2\x56\xf5\xad\xeb\xbc\x53\x78\x41\xc9\x5b\x79\x73\x9e\xd7\x55\xd5\x7e\x4a\xaa\x3d\xc5\x17\xd4\x14\xfc\xfd\x9a\x97\x69\xf5\x15\x9f\x40\x59\xf6\x8c\xdf\x5e\xba\xb1\x9f\xf8\xa9\x4f\xfd\xcc\xbb\x93\x63\x93\x8d\x9b\x70\x99\xa7\x20\x73\x40\x76\xeb\xc6\xde\x92\x04\xf4\x97\x96\x96\xa9\xdb\x6e\xf3\x06\xa6\x24\xfe\x5d\xde\x70\x0a\xf2\x72\x83\x12\x58\x97\x00\xf1\x03\x6c\xef\x2f\x20\xb1\x75\x46\xf2\xe2\x1d\x93\x02\x1f\x3a\x05\x80\x34\xaf\x29\x2c\x71\x43\x41\xd0\x0d\x2d\xe0\x19\x85\x92\xd6\xd5\x1e\x7f\x41\xa6\x35\xfc\x1e\x40\x67\x70\x8d\x40\xc8\x30\xe8\xca\x66\x9b\x67\xad\x7b\x57\x92\x1d\x0d\x9d\x41\x86\xc0\x46\x19\x32\xd0\xf5\x30\xc8\xd7\x7c\x04\x47\x56\x15\x4c\x8e\xfd\x7c\x3e\x20\xe7\x1e\x7a\x51\x6c\x81\x75\x26\x8a\x04\x44\x91\x37\x6f\x0b\xba\x83\xfd\x81\x41\x3f\x8d\x92\x95\xd0\xb4\x30\xf6\x29\xfb\xfc\xa9\xad\x41\x16\x6e\xea\xad\x9c\x77\xe4\x9a\xfe\x44\xda\xad\x13\x3a\x1f\xe2\x2f\xc0\x29\x2c\x16\x39\xeb\xa4\xa6\xa4\xa5\xef\xea\x6a\xe7\xcc\xe8\x12\xd7\xbe\xcc\xae\x60\xc2\xb0\x62\xce\xb7\x84\xaf\x4a\xb5\x55\x13\x0f\x70\xd0\x15\xec\x44\x3f\x10\xa2\xcd\xf8\x5b\x18\x65\xc6\x93\x18\xdb\xc4\x94\x3d\x0e\xe0\x7f\xa1\xee\x71\xc0\x7e\x7b\x7d\x97\xfb\x1b\x88\x01\x6f\x50\xd7\xfe\x93\x1c\xf1\x2c\x8a\x1f\x07\xa3\xb1\x91\x22\xc7\x81\x31\x22\x6d\x25\x0e\xf8\xc3\x01\xd4\xe9\xae\x13\xca\x0c\xc2\x44\xdd\x0e\x4b\xfa\x75\xb2\x09\x50\xed\xcf\xf3\x6b\xca\x65\x88\x12\xc8\x9b\x8f\x40\xea\x2d\x2a\x9c\xa1\x7f\xf2\x95\xa6\xfc\xed\x53\x97\x24\x68\xbe\xec\xe5\x35\x29\x13\x5a\xf0\xe7\xb7\x75\x5d\xd5\xf8\xa8\x58\x78\xce\x94\x94\x49\x73\xcd\xd6\xdf\xfa\xeb\xbc\xdc\x77\x6d\x98\x81\x2e\x65\xd3\x29\xd7\x93\x9a\xee\x0b\x92\xd0\x1f\xab\x94\xba\x99\xb2\x6b\x5f\x50\x4f\x74\xd9\xc7\x42\x05\x25\x63\x81\xa2\xfe\x97\xec\x0b\x2c\xbf\xbf\x0a\xf6\x5d\xb3\x65\x33\x04\xfc\xba\x21\x37\xc0\x73\x79\xdd\xb8\x62\x24\x06\xe2\x5c\x65\xb1\x6b\xd7\xbb\xbb\x0e\x9a\x6e\x4f\xeb\x75\x40\xf6\xfb\xe2\x96\xaf\x48\xea\x4d\x87\x7a\xd1\x98\x2b\xe7\xcd\xf7\x17\xef\xcf\xff\x76\x7f\xcf\x86\x85\xf6\xc8\x9d\x6b\xdb\xda\x75\x76\x5d\xd1\xe6\x7b\xf0\x0c\x62\xaa\x84\x41\x12\x5d\x87\x69\xb9\xe3\xa3\x74\x14\x32\x0a\x20\xa3\x78\x90\x8c\x01\x76\x07\xb0\xbb\x87\x61\x85\xf7\xde\xe0\x9a\x6d\x85\xa1\x41\xd2\x1d\x9d\xb8\x27\x94\xa9\xc2\xfd\x3d\x3e\xf4\xfa\xa8\xc2\x92\x34\xbd\xa8\xfe\x0b\xdd\x40\xa4\x3b\x37\x69\x49\x8c\xaf\xbc\x79\x55\xd7\xe4\x56\x51\xa9\xd8\x5b\xc5\xe1\x65\x0c\x7e\x9a\x43\xac\x37\x54\xf8\x90\x06\xec\x12\x4c\x8b\x8d\x32\xff\x12\x14\xb4\xdc\xb4\x5b\x3f\x8f\x2e\xaf\xc0\xd0\xc0\x2e\xde\x92\x64\xeb\x52\x4b\xac\xb2\x6a\x2f\xf1\x96\x79\xe6\xf2\x55\xf2\xe6\x1f\x60\x89\x29\x42\x00\x99\x99\x9f\x78\xd2\xe5\x0e\x53\x7f\x68\xe9\x4e\x88\x09\xbe\x2f\x73\xae\x2a\xa9\xd8\x22\x4e\x92\x36\xb4\xae\x4a\x66\x88\xaf\x52\xb4\x09\x86\x1b\x5c\x0b\x2d\x1a\xaa\xca\x40\xf8\xc4\x4b\xe1\xf9\x74\x3f\x7d\xb5\x94\x98\xfe\xb9\xa5\xe5\x80\xe8\x1d\x80\xd1\x14\x48\xa5\x40\xca\xe1\xe0\x2b\x0a\xab\xca\xe6\x24\x8a\xb6\xd3\xa9\x6b\xa1\xe6\x55\x51\xb8\xb9\x98\x21\xed\x6e\x90\xf8\x45\xd5\x92\xe2\x27\x31\xec\x7a\x92\x9f\x1a\xac\x89\xd6\xd2\x0e\x86\x28\x2c\xcc\x91\x2b\x38\x62\xf6\x0e\x9a\x32\x70\xd5\x46\x37\x6b\x68\x44\xbf\x41\x6c\x3e\x2c\xcc\x98\xfe\x90\x31\x51\x83\x46\x25\xca\x76\x83\x52\x2c\x93\x40\x71\x32\xd3\x69\x12\x24\xcc\x8f\xb8\x1a\xeb\xcd\xbe\xc8\x13\xdc\xc6\x33\x40\x00\x66\x4e\x9b\xb6\xae\x6e\xdd\xa7\x32\xab\x93\x9e\x14\x94\xd4\x06\xd5\x10\x9b\xab\xda\x5d\x8e\xa4\xbd\xf4\x14\x6a\x17\x57\x82\x6d\xd7\x5b\xea\x0b\x2f\xf4\x15\xb8\xd4\x90\xe3\x6f\x96\x0b\x44\x3f\x61\x4e\xcc\x40\x57\xce\xfa\x97\x6d\x7d\x51\x93\xb2\xd9\x57\x75\x0b\x31\x6f\x9d\x67\x35\x44\xda\x61\x08\x24\xb9\xde\x83\xf7\x24\x35\xbd\xa8\x7a\x89\x4a\x19\x29\x42\xbe\xbf\x77\xcd\xa1\xe8\x64\xc1\xc0\x2e\xd3\x2b\x88\x00\xa6\xbc\xd8\x86\xfc\xfe\xdc\x20\x13\x18\xf9\x80\x72\xdc\x77\x5d\x0d\x80\x92\x80\xc4\xc0\x97\xb9\x7b\xbd\x46\xaa\x9b\xa7\xd3\xf2\x63\xd5\xca\x38\x85\xf4\x80\x02\x08\x8b\x74\xc7\x39\xf4\x09\x51\x17\x3e\x78\xcb\x58\xec\x3c\xd8\xd8\xe0\x80\x62\xcd\x01\x11\xbb\xa0\x21\x8a\xc5\xa8\x23\x9c\x42\xd7\x2e\xc6\x5f\x49\xf8\xf2\x38\x0d\xd2\x4e\x0e\xc6\x3a\x79\x83\xde\xc4\xb2\x55\xdc\xc1\xf7\x39\xfc\x74\x4a\x26\x79\xd9\xb4\x88\x06\x4a\x84\xd8\x86\x65\x70\xad\x91\xa5\xfc\xd0\xe6\x9b\xbe\xd8\x44\x67\x44\x05\x25\x84\x0c\xf8\x00\xac\x8f\x19\xd3\xa9\xc3\x37\xc2\xc9\x4b\x93\x38\x5d\xdf\x8e\xa1\xe2\xf9\x3f\x0f\x3f\x8a\x61\xe7\x7c\x26\x8c\x8f\x90\x9a\xf2\x57\x77\x4a\x20\x56\x10\x3d\x45\xa7\x68\x6a\x6e\x0f\x2c\xc3\xd2\xab\xdf\xb2\x00\x63\x8f\x61\x99\x4e\x4d\x05\x0e\x1a\x34\x1a\x5b\x41\x8a\xb3\x90\xf7\xd3\x98\xff\x9a\x94\x09\xaf\xaa\xd2\x34\x68\x1f\x77\xad\x43\x7e\xe5\xab\x42\x3f\x0e\xc6\xc2\xbe\xa6\xb6\xbd\xef\x16\x11\xae\xff\x51\x49\x31\xe3\x9a\x4a\xd3\x03\x90\xba\xe2\x8f\x41\x6d\x01\xf7\x21\xf8\xff\xa0\xc0\x97\x28\x02\x75\x4d\x1b\xc3\xca\x68\xf3\x54\xb8\x47\xb8\x12\xa9\xf5\x63\xd8\x58\xa2\xfd\x18\xd0\x6b\x8b\x03\xb7\x40\x41\xe5\x5a\xd0\x96\x3e\x15\xee\x41\x06\x46\x41\x58\xf3\x1f\x32\x47\x1b\x55\x36\x9e\xd4\xd4\xfb\xfb\xc5\xf2\x51\xa7\x2e\x92\xc5\x24\x8a\x57\xa3\xc0\x7d\xaa\xd9\xbc\x80\x4c\xa3\xb3\xc5\x62\x3e\x1e\xa7\x91\x8b\x2b\x7a\x2f\xd3\x39\x00\x48\x0f\xf9\x1e\x8a\xcb\xa0\xae\x3a\x28\x0d\x92\x97\xe9\x8c\x7a\x63\x16\x45\x1a\xab\x79\x20\x60\x8e\x99\xa4\xec\xc2\xc0\x98\xa7\xda\xb6\x48\x0e\x97\x02\x8e\xf9\x45\x05\x26\x5e\xf2\x62\x18\x4a\x37\xd2\x82\x45\xcd\x2f\xff\xfb\x73\xe3\x5f\xcd\xe6\x9b\xbe\xfd\xa2\xd5\xdd\x47\x9d\xc4\xe9\x19\xa4\x8a\x49\xef\xee\x48\x80\x85\xb9\xdd\xdc\x44\x16\xa8\x6e\x67\x12\x3c\x7f\xbe\xdf\x92\x06\x0a\x02\x78\xe4\xf5\x84\x39\x4b\x2d\xe9\x2d\xf1\x01\x6a\x0a\x12\x34\xf9\xff\x52\xe6\xa4\x70\x8a\x89\xc0\xec\x29\x3c\xec\x0e\xf9\x66\xfd\x7d\x18\x61\x33\x0d\x94\x4a\xd6\x1f\xa9\x4e\x10\x72\x6a\x0d\xa5\x99\x95\x47\xa7\x67\xbe\x0c\xfd\xab\x38\xa0\x37\xb4\xbe\x75\x2d\x81\xc5\x3a\x79\x36\x83\xb9\x59\x09\x21\x19\x12\xe5\xbe\x9c\x10\xa2\x0e\x4f\x16\x23\x1a\x85\x75\xbf\x86\x22\xd7\x1a\x58\xbf\x8b\xfe\xb2\x58\x4c\xa7\x7f\x5d\x2c\xbe\x03\xc5\xfc\xeb\xe2\xdf\xa3\x28\x22\x06\x96\x16\x33\x3f\xcc\x9f\x3e\x52\x48\x00\xcb\x46\xaf\xca\xb4\x9a\x6c\x2d\x7a\x0f\xff\x49\x5b\xd4\x95\xa4\xd7\xa4\xc1\x71\xa7\xe0\x98\x33\x02\x35\x6a\x13\x8c\x10\x6b\x1e\x3c\x8e\x08\xd6\x28\x2c\xdb\x31\x28\x82\x8c\xa8\xa1\xdf\xf3\xa5\x34\x93\x60\x1a\xcd\x9b\x60\xd1\xdd\xa1\xcf\x40\x56\x6a\x86\xc5\x72\xfc\xd6\x75\x3e\x97\x50\x21\xab\x0b\xb2\x0e\x8d\x50\x62\x48\x19\x31\xb7\x04\xb5\x62\xf5\xc0\x02\xe8\x00\x72\x73\xa8\x7d\x83\xb6\x3a\xaf\xbe\xd2\xfa\x35\xa8\xac\x8b\xbd\x23\x09\x43\x67\x67\x12\xc6\x87\x3c\xd3\xcd\x2e\x93\xab\x08\xff\x5b\xe1\x7f\x33\xc7\x9f\x38\xb3\x34\x4c\x91\x9f\xcc\x0b\x33\x83\x25\x4d\x70\xb6\xad\xb2\xa8\x48\xbc\x22\x97\xb1\x4e\xcf\xd5\xfd\x3d\x6f\xbd\x1e\x0c\xfc\x6a\x52\x3f\x16\x19\x38\x01\x84\x60\x05\xeb\xbf\xde\x9f\x7f\xdf\xb6\xfb\x8f\x14\x54\xbf\x69\x7d\x5e\xc5\xca\x42\xdd\xe7\x1b\xbd\xa4\x58\x12\x9a\x51\x0b\x7b\x69\xaa\xa0\x65\xb7\xe9\x48\x08\x57\xf3\x4c\x4c\x1e\x52\xec\x26\x60\xcf\x25\xf6\xb1\xdb\x0c\x72\x1a\x46\x44\xaf\x0b\xc8\xc4\x8e\x0e\x1a\x01\xfc\x70\x47\x03\x75\x1a\x4f\x84\x21\x64\xec\x6d\x41\x80\x73\xa8\x38\x59\x22\xcc\x0f\x03\x4c\xd7\x92\xb8\xa0\x2b\xf0\xc6\x2f\x61\x98\x79\xfd\x39\xf8\x10\x8c\x28\xe1\xc2\xe3\x7c\xaa\x11\x97\xa9\xfc\x01\xd6\xac\x4a\x84\x36\x53\x6c\x12\x19\xea\xe9\x26\x18\x53\x20\x84\x49\x1d\x97\xe3\x1e\xea\x8e\xcd\xba\x60\x46\x2d\xed\x81\xb0\x36\xa1\x61\xc8\x00\x00\xc9\x70\xdb\x35\xde\xca\x11\xc3\xa0\xae\x2c\x40\x3b\xfe\x26\x72\x80\x62\x67\x96\xcd\x1c\x24\xd7\x59\xd2\xcb\xcd\x15\x10\x9d\xfa\x72\x16\x22\x65\x6c\xa9\x71\xd8\x84\xe0\x1c\x52\xc4\xf9\x87\xb3\xc8\x85\xdc\x27\x18\xdf\x4a\x2c\x2b\xe2\xfe\x24\x62\x87\x44\xe7\x1b\xa9\x05\xad\x76\x65\xcf\xd4\xe7\x5d\xdd\x93\x05\xaa\xb2\xd1\x5f\x8d\xc6\x1d\x57\xd5\xc2\x84\xd7\x30\x0c\x09\x16\xc3\xdc\x9f\xd9\x2f\x67\x4f\x98\x14\x92\x81\xe6\x94\x9a\x4d\x19\x33\x6e\xe8\x15\xbf\xc5\x5f\x0c\x8d\xeb\x17\x7f\x47\x61\x4d\x9a\xf6\x16\x02\xa1\x93\xe6\xe0\x5d\xc9\x6d\x38\x29\x41\x7b\x96\xce\x64\xfe\xdd\x0b\xee\x23\x07\x70\x8e\x7c\x82\xb6\x1b\x39\xc6\x4a\x2f\x66\xe0\x2f\xc0\xae\xab\xaf\xae\x37\x7b\xe1\xe0\x64\x8a\xbe\x89\xb5\x6f\x45\x5b\x6f\x89\x4e\x00\x96\x9c\x4e\xc5\x43\x20\x3a\xb9\xff\x04\x41\xb9\xe0\x0f\xc4\x70\x94\xf8\xd9\x31\x2f\x45\x45\x37\x14\x89\x70\x7c\xe1\x5d\xbe\xd5\x79\xc5\x6a\x8b\x5f\xe1\x13\x69\x9e\xa0\x40\x23\x67\x9b\xa7\xb0\x7f\x8e\x60\xfa\xc5\x2c\x05\xe6\x98\x6c\x40\x9d\x6e\x48\x81\x24\x25\xd2\xd7\x51\xee\xfb\x12\x4e\xe2\x1d\x61\x8b\x88\xce\xbf\x7e\x32\xd5\x92\x1a\x74\x39\x4c\x55\x66\x80\x37\x20\x0b\x16\x0d\x45\x23\x98\xd4\xed\x1c\x79\x39\x4d\x81\x19\x07\xbf\x56\xac\xcb\x6e\xfd\xcc\x7c\x2e\xeb\x51\x3b\xfc\x2c\x4e\x31\xa7\xb6\xbe\x15\x26\x95\x62\xf3\x21\xa9\xca\x16\x18\x7d\x53\x25\xac\xeb\x1b\xc4\x55\x7a\x0b\xe1\x13\x7c\x06\x76\x5e\x0e\x09\xcb\x29\x21\x3b\x38\x70\xc9\xdc\x49\x1b\x0a\x89\xcf\x4d\x21\x84\xcc\xc3\x4f\xbb\xdd\xee\x96\x27\x2e\x10\xb0\xfd\x6d\x94\xd9\x2c\x90\x0e\x16\x08\xc9\x29\xdb\x55\xa5\x6c\x81\x0d\x80\xcc\x5a\x1a\xd8\xc6\xe3\xdb\x6e\x98\xa0\x06\xc1\xc4\x6b\xf7\x17\x48\x87\xa0\x4f\xa5\x6e\x8b\xe9\x44\x1a\x74\xa5\x22\x1c\x4f\xc8\xbd\xa9\x13\xc7\x77\xbe\x90\x1b\xd2\x24\x75\xbe\x6f\xc3\x0c\xcc\x14\x94\x1f\x17\x31\x54\x33\x1b\x39\x0f\x58\x50\xd2\xb5\xb5\x53\xae\x41\x1c\x80\x0d\x92\xf1\xdc\x4a\x55\x19\xf9\x04\x96\x9d\xe0\xee\x34\x5d\x0c\x29\xab\xfb\x88\x9d\x3f\x56\xa8\x8a\x74\x96\xe1\x38\xd2\x45\xe6\x20\x23\xbc\x47\x6b\x65\xd2\xa3\x33\xdb\xdb\xe4\x41\x2c\x5a\x11\x68\x45\x82\xbd\x63\x0b\x8e\xe3\xa5\x35\x6f\xb0\xe9\x10\x52\x62\x16\xb7\x61\xc1\x6d\x2f\xc5\x99\x0f\xe6\x6e\xf2\x48\x9f\x38\x36\xdb\xba\x89\x4f\x54\x7c\x6e\xdc\x93\xa1\xe5\x1e\xc4\x1f\x7f\x40\xb6\x93\x47\xf7\xd9\x5a\xe5\xb3\xbd\x43\xe7\x45\x14\x10\x71\xd2\x22\x97\x51\xed\x4c\xc2\x8f\xb0\x5b\x9a\x03\x3a\x6e\x06\x60\x60\x1e\x02\xfe\x51\xbc\xb6\x7e\x82\x8e\x98\x43\x18\x98\x15\x03\x3b\x8e\xda\xda\x84\x10\x47\xe8\x50\x7c\xa8\x30\x2e\x1f\xec\xd1\xeb\xf6\xc9\x3f\xb2\x62\x3a\xeb\x9b\x08\x43\xe7\xcd\xf5\xc0\x1e\xb5\x82\x5a\x6b\x87\x9f\xf9\x58\x9b\xbf\x11\x15\x7c\xe6\xad\xdc\xac\xef\xeb\xf6\xf7\x2d\x5c\x63\x65\x76\x4c\xf2\xc4\x23\x09\xf3\xf8\x45\xe0\x44\x81\x88\x06\xee\xb8\x1b\xdb\x7f\x53\xda\xa8\x0f\xf5\x6c\x19\xbc\xd9\x77\x7d\xb0\x2b\xcb\x66\xf0\x13\x41\xcb\x29\x21\x7e\x2d\xb7\xb4\xce\x5b\xc3\xaa\xc8\x00\x1b\x71\x44\x01\x3f\x86\x87\x80\xdd\x7f\xc1\x38\xae\x74\xc3\x21\x6c\xb4\x75\x87\x77\x2f\x22\x02\x5f\xf8\xc1\x65\xc4\x4a\x4a\x83\xc5\xad\x3f\x1c\xd6\x45\xb9\x78\x79\x23\x5b\x8c\xd1\x17\x31\xf2\x89\x5d\x77\x88\xae\x25\x00\x04\x81\xa8\x10\x2f\x1f\xa0\x9c\x8f\x76\xfe\x56\x55\xb6\xe1\xa2\x80\xbc\x49\x30\xf6\x64\x05\x69\xda\xf7\x10\x98\xb3\x9c\xa6\x98\x02\x45\xec\xf8\x9a\x7d\xc2\xc6\x86\xf2\xca\x13\x8a\x02\xa8\x9e\x3b\x33\x59\x7b\x12\x86\xe0\x07\x59\xbc\x06\x8e\xc7\x8a\x51\xad\x52\x65\xb3\x59\x02\x72\x64\xd6\x1c\x66\x19\x43\x9f\x3f\xc3\xd8\x5f\x40\x59\x8e\x30\x64\x69\xb1\xdb\xd9\xe9\x6f\x20\x98\x5f\x3c\x85\xc9\x98\xfd\x28\x6c\xc6\xec\x47\xa1\x3c\x66\x3f\x07\x3f\x1f\x9d\xd3\xa8\x81\x5c\x3f\x31\x1f\xce\xc8\x5c\xd1\x91\xca\x47\x87\x25\xc7\x67\x0f\x67\x52\xb6\xd9\xbc\xaf\x78\x7c\xb6\x71\x78\x69\x43\xa1\x47\x1a\xbd\xd1\x99\x5b\x1b\xba\x0f\xc1\x08\x77\xfd\x10\xc8\x5b\xb3\xa8\x33\x01\x5e\x8f\x44\x32\x82\x10\x7e\xe8\x38\xcc\xfa\x38\x5b\xc2\x07\x32\x0f\x29\x8f\x03\x6d\x47\x84\xca\xd1\x06\xba\x49\x31\x24\x19\x1c\x46\x04\xb9\xc3\x00\x67\x50\xbe\x0f\x47\xa7\xb6\xc8\xee\x7a\x23\xba\xad\x8d\x64\x1d\x15\x31\x83\x30\x4b\x0e\x72\x6b\xc8\xb5\x67\x53\x3d\xff\x67\x16\xfe\xcf\xc6\xfc\x2f\x46\xfc\x2f\x7e\x2d\xff\x67\x0b\x39\x85\xb5\x21\x07\x8f\x32\x84\x7e\x99\xcc\xe5\x96\xf0\xfe\x47\xf1\xf1\xe8\x3e\x2e\xec\xfb\x38\xe6\x82\x27\x19\x47\x78\x30\x95\xfa\xb7\x30\xf1\x04\x65\x5c\x3c\x4d\x19\xc7\x4c\x88\x84\xe6\x18\x17\x23\xc3\xd3\x53\xf4\x3e\x63\xe1\xc3\xbe\xfd\xf0\x43\x5c\xb9\x90\x57\x0c\x8c\x55\x2c\xa7\x73\x3c\x85\x60\x05\xad\xbc\x3d\xc5\x5e\x7a\x14\x22\xc9\xe0\x65\xf9\xf0\x3c\x7c\x4f\x29\x92\x35\x19\x3e\xe9\x23\x0c\x9b\x41\xc7\xf8\xe4\x7b\xec\x45\x98\xf8\x86\xc7\xfb\xfb\xd9\x4c\x77\xc0\xc3\x45\x46\xdf\xf0\x3b\xc6\x6a\xca\x6d\x30\xcb\x89\x36\x9e\x6a\x24\x45\x55\x02\x2b\x1e\x3c\x36\x78\x2d\x13\x1e\x97\xb1\xe5\x56\x15\xe4\x18\x09\xd8\x92\x6c\x85\x40\x69\x88\xbd\x10\x07\xc7\x79\xe5\x86\xe7\xc1\x5f\x94\xb5\xe9\x0d\xde\x9a\xc2\xf2\x57\x1d\xc5\x42\xd3\xbc\x36\xc2\x2a\xd4\x49\x2e\xf2\x48\x3e\x4f\x3b\xda\xe7\x43\x97\x44\x5c\xfd\x91\x57\xbf\x58\xd1\xca\x9d\xd6\x65\x7c\x85\x77\x7e\xd4\x95\x78\x51\xfb\xa4\xb5\x34\xac\xa2\x18\x16\xce\xb0\x5f\xda\xe0\xce\xa2\x4e\xbc\x8b\x60\x6c\x94\xfd\x46\x9d\xec\xc7\xb3\xc0\xb9\x7c\xd2\x14\x71\x85\x87\xe0\x15\x1e\x3e\xa1\x14\xb7\xee\x34\xba\x86\xbb\x79\xbf\x51\xca\x20\xd1\x48\xfc\x72\x41\xf3\x20\x7f\x18\x92\x58\xf7\xda\xff\xe2\xf9\xd7\x96\x2d\x7f\x2e\xa4\x13\x3a\xe2\xc1\xf1\x93\x2d\x29\x37\x34\x74\xc0\x98\xd9\x93\x73\xd0\x66\x22\x8f\x91\xc3\x6f\xdc\x3a\xda\x17\x48\xfd\xc5\xed\x61\x3d\x2c\x1b\x30\xa3\x93\x44\x13\x06\x7c\xd6\x6e\xdf\xde\x32\x7f\xc1\x53\x5d\x80\x1a\x1f\x98\x9d\x9c\x68\xca\x40\x8c\xbb\x87\x3a\x4e\xc9\xcc\x63\x5a\x20\xaf\xed\xa8\xa8\xb1\x9d\x81\xdd\xfe\x26\x34\x46\xfd\xe1\xcc\x56\x30\xee\xf6\xf7\x81\x94\x9b\x7f\xa6\xda\xe8\x37\x28\x8d\x1b\x5e\x3d\xd4\x70\x07\x51\xf3\xa5\x56\xe1\xb8\x9e\x70\x7a\x0f\x5c\xb5\x54\xb4\xa1\x40\x6d\x28\x9e\xa6\x0d\xec\x42\x35\xe8\x02\x16\x19\xf8\x46\x36\xec\x6a\x35\x1b\x21\x1b\xac\x36\xf8\x68\x41\x41\x9b\xe5\xf0\x39\xbe\x80\xde\x14\x23\xbd\x49\x19\x9a\xe2\x09\x5a\x53\x3c\x41\x6b\x0a\x6d\x87\x59\x1d\x34\xee\x14\x0f\x75\x29\x6b\xeb\x31\xff\x87\x47\xd2\xfd\xbd\xf4\xf1\x1e\xd2\x63\x7b\x88\x31\x01\x65\xf5\xaa\x4c\x3f\xb5\x20\x62\xed\xbc\xe9\xa8\x73\x08\x50\x64\x7d\x19\x8c\x01\x09\xe5\xf6\x1a\x2a\x91\x46\xbd\xfb\x68\xdb\xfa\x84\x6b\x1e\xab\xf0\x0f\x63\x86\xf9\x0e\x3c\x95\x69\x71\x42\x0a\x7b\x83\x95\x22\x9e\x44\x20\xa2\x06\x94\x07\x1e\x71\x67\xde\x66\x19\x56\x53\x0e\x96\x4a\x8e\xff\x3b\x71\x0c\xdc\x18\xec\x7a\x36\x46\x98\xce\x68\x9c\xc4\x41\xd2\xd5\x35\xac\x7d\xc1\xda\xcc\x51\x14\x19\xf6\xd7\x5f\x0e\xfd\x63\x76\xc5\x20\x53\x95\xa6\xf5\x28\x3b\xc0\x0e\xb6\x84\x58\xe9\xaf\x21\x09\xaa\x3a\xdf\xe4\x25\x29\xde\x22\xa9\xda\x47\x63\x1d\x9d\x1b\xa3\x5d\x28\x3e\xbe\xe1\x47\xd8\x2e\x72\xda\x00\x14\xd4\x01\x7b\xb2\x21\xdc\x32\x0c\x7c\xfd\x86\x5b\xa9\x5e\xf5\x67\xce\x2b\x76\x8f\x42\x39\x82\x66\x93\x1c\x8f\xdd\xde\x2f\x5b\x92\x97\xcd\x6a\x78\x1c\x3e\x9f\x9c\xe1\xdf\x97\xe8\x6b\xaa\x9b\x6e\x70\xa0\x7e\x1a\xd1\x6a\x6c\x84\x31\xd5\xf8\xea\x6a\x5e\x6d\x87\x5e\x6d\xf7\x24\xaf\x76\xd0\xe0\xb8\x67\xaa\x98\x2b\x53\xc7\xab\x9e\x0a\xa7\xbc\xe1\x7f\xad\x34\x06\xb2\x33\x2a\xd2\xc3\x3e\x36\xa5\x29\x27\xb8\x77\x35\x03\x0b\x9e\x4e\xcc\x51\x01\x18\x28\x39\xdc\x53\xb1\xaa\x1f\x8f\x5d\x3d\xe9\xd9\x05\xa1\x1e\xae\xbc\xa0\xb7\x14\x17\xd8\x1f\xda\x4e\xf8\x07\x43\xcf\xd9\x81\x26\x24\x96\xfa\x5f\x12\xd9\xae\xe2\xdd\x15\x90\xe1\x84\xfd\x17\xd1\xdd\xe4\xbd\xca\x24\x78\x4e\xf1\xf0\x89\xf6\xf6\xc9\x1c\xf3\x89\x9b\x69\xd7\x35\x3d\xc8\xfa\xea\xea\xeb\x04\xaf\x01\x5c\x00\x37\xbc\xcc\x7a\xe1\xf4\x0b\x4f\x76\x5d\xd3\x4e\x62\x3a\x21\x65\x3f\x71\x02\x33\x55\xea\x5e\xf0\x06\xe9\x86\x5d\x26\x88\x95\x36\x9a\x3b\xfc\xb5\x48\xe6\x0b\xe9\x86\xe9\xc1\x5b\x6e\xd4\xd0\x44\x80\xc8\x8a\x3f\x7b\x3c\xc9\xda\x60\x48\xde\x1c\x09\x4d\x42\xae\xf2\x62\x63\x73\x80\x7f\x36\x91\xf2\xa8\xfa\xff\x55\xa0\x80\x3a\x93\xd9\x0c\x27\x41\x15\xef\x1b\x76\x7a\xf8\x27\x09\xd7\x2a\x5d\x9e\x9d\x5c\x1e\x15\xea\x11\x91\x6a\x7f\xe9\x11\x0b\x91\xa6\xa6\x48\xa9\x2a\x52\xf2\x7b\xea\x68\xc6\x84\x48\xfa\x76\xae\x22\x44\xda\x0b\x31\x39\xe0\x39\xe4\x23\x76\x9d\x0e\x46\x2d\xb2\xcd\xc1\xc8\x99\xcc\xfc\x18\xd0\x3c\x9b\xcf\xff\x6d\xd2\x54\x5d\x9d\xd0\xf7\x64\xbf\x87\x3a\xf7\xe7\x8f\xe7\x91\xe5\xaf\x34\x83\x5d\x5e\x06\x3b\xb2\xff\xbf\x00\x00\x00\xff\xff\x9d\x15\x70\x25\x56\x3a\x00\x00")

func angular_file_upload_min_js_bytes() ([]byte, error) {
	return bindata_read(
		_angular_file_upload_min_js,
		"angular-file-upload.min.js",
	)
}

func angular_file_upload_min_js() (*asset, error) {
	bytes, err := angular_file_upload_min_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "angular-file-upload.min.js", size: 14934, mode: os.FileMode(416), modTime: time.Unix(1420664618, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _app_js = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x51\x6f\xdb\x36\x10\x7e\xb6\x7f\x05\x67\x14\x90\xb4\x28\x4c\x32\xec\x29\x42\x5e\xd2\xc2\x83\x81\xb8\x28\xd6\xf6\x61\x08\x82\x81\x91\x28\x9b\x08\x45\x0a\x24\x95\xd4\x70\xfd\xdf\x77\x3c\x52\xb2\x94\xc4\x5d\x0b\xc8\xe1\xdd\x77\xf7\x1d\xbf\xef\x24\xa6\x36\x9d\x64\x86\x36\xba\xea\x24\x4f\x93\xf5\xee\xa3\x14\x6d\x2b\xd4\xc6\x26\x39\xb9\x4f\x3a\x41\x8d\xee\x1c\x37\x70\x4a\x22\x78\x29\x24\xff\xde\x4a\xcd\xaa\xe4\x21\x9b\xd3\x52\xab\x5a\x6c\xd2\xba\x53\xa5\x13\x5a\xa5\x1f\xac\x63\x8e\x7f\x31\xfa\x59\x54\xdc\xe4\xe4\x43\x67\xe4\xdf\xd8\xa3\x8f\x65\xfb\x39\x79\x27\x4c\xb5\xdb\x72\xf3\x22\x2c\xcc\x71\xf1\xa8\xf5\x93\x4d\xb2\xc2\x23\x27\x0d\x21\x40\x08\xc5\x50\x9a\x78\xd4\x9d\xb0\x0e\xa6\xdb\x63\x82\x10\x68\x7b\x4d\xfa\xfa\x3c\x06\x1d\x6f\x5a\x09\x15\xdf\x31\x89\x39\xba\x75\x8d\x1c\x00\x70\x09\x67\xb4\x94\xdc\x40\xfe\xd6\xe7\x3f\x3a\x23\x13\xcc\x1e\xb2\x09\x67\x39\x12\xe8\x3d\xd2\x8b\x6b\xff\xb3\xaa\x4e\x90\x0f\xe5\xbf\x18\x60\xf0\x60\x32\xc4\xac\x9f\xa0\x43\xf1\x03\xff\x6c\x16\xb9\x87\x20\x84\xa6\x8c\x31\xd3\xf3\xcd\x66\x13\xae\xe0\x64\x64\x9a\x79\x9a\x62\x7e\x08\xb6\x46\x50\x3a\x12\x24\x27\x23\x9f\x4b\xdd\x72\xf0\x77\xeb\x5c\x9b\x45\x29\xf0\x40\x37\xdc\xa5\x8b\xa0\xc6\x22\xa3\xb6\x2b\x4b\x6e\xed\x71\x43\x2a\xe6\x58\xe6\x47\x7f\x66\x86\xc0\x0a\x90\x1b\xf2\x2f\x6d\x58\x8b\x89\x11\xc3\x33\x93\x39\x79\xe2\x3b\xc4\x02\x58\x52\x51\x01\x16\x22\x45\x1f\x18\x94\xfa\x26\x1a\x6e\xe9\x1d\xb3\x6e\xa9\x4d\xc3\x9c\xe3\x1e\xda\xe8\x86\x2b\x97\x9e\x40\xfe\x7e\x75\x79\x79\x99\xd1\x1a\x0b\xd2\xe4\x1f\xf8\x77\xbe\x5e\x9f\x7f\xfa\xe4\xf7\x0e\x08\x0c\x77\x9d\x51\x04\xaa\xfd\xf1\x80\xc1\x7e\x5c\xab\x8d\xbb\xdd\xa5\x70\x1c\x0d\xac\xb2\x7d\xac\x39\x57\xef\x11\x16\x07\x5c\x68\x14\x0a\xd5\xa3\xa8\x11\x34\x84\x3e\x45\xf4\xf9\xad\xfc\xd3\x75\x38\x65\x41\xde\xbf\x28\xcc\xb0\xc6\x9e\x34\xe4\x62\x41\xce\x26\x48\x1a\xd6\xf5\xff\x7c\xaa\x26\x2e\x1d\x6f\x37\xf6\x2b\x7f\x8a\x56\x45\xa3\x26\x2a\x1e\x35\xac\xc6\x0a\x56\xe3\x06\x83\x7e\xcf\xf4\x4e\x97\xf4\xab\x63\xc6\xc5\x9a\x09\x29\x34\xa8\x7c\x74\xa4\xa2\x0f\x01\xe6\xb4\x8a\xe3\x45\x3f\xad\xe1\xf1\xe3\x86\xdf\xa9\x9e\xa1\x8b\x21\x60\x51\xfc\x65\x82\x4a\xdf\xbc\x84\xf8\x92\xb1\xce\xe9\x00\xb9\x26\xce\x74\x7c\x1e\x2e\xff\xaa\x1f\xd5\xea\x6b\x90\x7d\x05\x2f\x2d\x74\x1f\xe6\x12\x70\xce\x89\xe1\xe8\x64\xb0\x40\x84\xd5\xab\x85\xaa\xd2\x49\x1f\x30\x61\xbf\x02\x1e\x40\xd3\x55\x15\x04\x13\x35\xb4\x08\x76\x08\x47\x4b\x09\xa5\x0b\xa1\x6a\xbd\x40\x1f\xb8\xb4\x7c\x1f\xdc\xb1\xaf\x93\xd3\x19\x2d\x6d\x3b\xbb\x4d\xfd\x20\x58\x09\xf7\x80\xdf\x57\x17\xf1\x86\xdc\x3f\xf8\xeb\x0d\xeb\xd6\x8b\xb1\x52\x15\xff\x91\xfc\x6a\xbb\xde\x74\xf2\x19\xf2\xf3\x67\xe8\xd8\x5b\x59\x0b\xe9\xbc\x8d\x8f\x3b\xc7\xed\xd8\x40\xd4\x27\xae\xcd\x10\x44\x54\x4e\x5a\xc3\x4b\x61\x21\x10\x44\x14\x35\x49\x85\xfd\xcc\x3e\xa7\x2d\x33\x96\x2f\x81\xd0\x05\x68\x96\x79\xc2\xdf\x84\x5d\x0a\x05\xca\x0f\xc1\xd8\x37\x39\x4f\x8a\x58\xef\x76\x2d\xd7\xf5\xb1\x33\xb9\xb9\xb9\x81\x6f\x2c\xdc\x12\x7c\xe1\x55\x92\x8d\x53\xe4\xaa\x88\xde\x75\xd0\x16\x55\x1a\x2e\x90\x3c\xdd\xfa\xe7\x1a\x9f\x7f\xe1\xf3\x1b\x3e\xbf\xdc\x26\x0f\x7e\x83\x66\xaa\x6b\x1e\x71\xe5\xd6\xcc\x6d\x69\x2d\xb5\x36\x29\xfe\x29\xf5\x26\x4e\x48\x2e\xc8\x10\xb9\xba\xfc\xe3\xcf\x0c\x4d\x8a\x53\x07\x4c\x0f\x69\xf5\x0b\x42\xf2\x71\xbb\x40\x91\x65\x19\x75\x7a\x29\x7e\xf0\x2a\x1d\x49\x76\x46\x48\x02\xff\xcf\xc2\xf0\xf7\x01\x8b\x9e\x78\x47\x8a\xf9\x7f\x01\x00\x00\xff\xff\x9c\xb1\x7d\x76\x3d\x08\x00\x00")

func app_js_bytes() ([]byte, error) {
	return bindata_read(
		_app_js,
		"app.js",
	)
}

func app_js() (*asset, error) {
	bytes, err := app_js_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "app.js", size: 2109, mode: os.FileMode(420), modTime: time.Unix(1421508058, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _books_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xcd\x4a\xc4\x30\x10\xc7\xcf\xd9\xa7\x08\xf1\xdc\x0d\x78\x4e\x03\x2a\x78\x12\x4f\xfb\x02\xa9\xc9\xb6\x83\x69\x53\x32\xb3\x22\x2c\x7d\x77\x33\x49\x5d\x15\x2f\x9d\x4c\xf9\x7f\xfc\x18\xe3\xe1\xc3\x1e\xa4\x34\xd3\xbd\x7d\x4c\xe9\x1d\x8d\x2e\x2f\xfe\x41\x6e\x88\x41\xbe\x45\x87\xd8\xab\xb6\xd4\x6f\x87\x94\x61\x0d\x5e\xb1\x8a\x75\x59\x2e\x63\x97\xc3\x1a\x1c\xf5\x6a\x28\x19\x12\x16\xc9\x13\x8b\x44\x48\x61\xc8\x97\x29\x44\xad\x32\x4e\x4e\x39\x9c\x7b\x75\xa7\xab\x44\x5f\xaf\x3c\x8f\xe0\xb7\x4d\xd9\x7d\x39\x01\xc5\xb0\x6d\x46\x3b\x6b\x74\x05\x64\x3b\xce\x2e\xc6\x1b\x50\xf8\xa4\x6e\xbe\x10\x73\xec\xae\x87\x0b\x4d\x29\x23\xfb\xaa\x94\x5d\x46\xb7\xf2\xc2\xf0\xc7\x99\x61\x9c\x48\xb6\x44\x36\x77\xb0\x9c\x93\xfa\xc1\xdc\x23\x9f\x22\xac\x2b\x2c\x23\x9e\x60\x0e\x78\x7c\x71\x48\xcf\x29\xcf\x8e\x4a\x2f\xf7\xdc\xd8\xca\xe3\x3b\x7f\x70\x7e\x0c\xea\x5f\xc2\x6b\xfa\x65\xa8\x58\xa2\xdd\x4f\x53\xae\xf7\xd6\xf5\xba\xf6\xd0\x44\x5f\x01\x00\x00\xff\xff\xeb\x1e\x32\x44\x98\x01\x00\x00")

func books_html_bytes() ([]byte, error) {
	return bindata_read(
		_books_html,
		"books.html",
	)
}

func books_html() (*asset, error) {
	bytes, err := books_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "books.html", size: 408, mode: os.FileMode(420), modTime: time.Unix(1421507369, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _clippings_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\xae\x83\x20\x10\x86\xf7\x9e\x82\xb0\x57\x93\xa7\x4b\x25\x79\xf5\x0a\xbd\x80\x22\x51\x52\x02\x06\xc6\x6e\x8c\x77\xef\xcc\x28\x5d\x74\x37\xff\xf8\xcd\xef\x47\x37\xdb\xb7\x2a\x84\xe8\xd6\x3f\x35\x38\xbb\x6d\xd6\x2f\xa9\xab\x31\xf1\xb2\x51\xc7\xa1\xf7\x18\x8d\x87\x47\x08\xaf\xea\x69\xc1\x99\xf3\x44\xa0\xb9\x80\xf6\x07\xf8\xdf\x61\x0d\x31\x31\xd2\x32\x02\xe3\xe4\x8c\xd0\x6e\x4c\xa9\x97\x1c\x24\xed\xe9\x4b\x14\x7e\x29\xa3\xd9\xcc\x08\xbd\xd4\xf8\x77\x61\xbd\x98\xa8\xe6\xab\x72\xb3\x44\xcf\x79\xc4\x80\xd6\xb9\x92\xee\x4a\x1d\x3c\xa0\x82\x24\x1b\xcc\xd5\x70\x65\xd2\xb8\x1f\xc8\x67\x75\x2e\xc1\x29\xb2\x5d\xcd\x46\xaa\xb8\xb9\x4f\x00\x00\x00\xff\xff\x70\x1b\x84\xfb\x0f\x01\x00\x00")

func clippings_html_bytes() ([]byte, error) {
	return bindata_read(
		_clippings_html,
		"clippings.html",
	)
}

func clippings_html() (*asset, error) {
	bytes, err := clippings_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "clippings.html", size: 271, mode: os.FileMode(420), modTime: time.Unix(1421508501, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _index_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4f\x93\xd3\x3e\x0c\x3d\xa7\x9f\xc2\xbf\xfc\xce\x8e\x9b\x76\x0f\xec\xe2\xf6\xc0\xc2\xb1\x03\x07\x38\x70\x74\x13\x37\x71\xab\xc4\x1e\xdb\xe9\x9f\x61\xf8\xee\xc8\x49\x9c\xd2\xd9\x32\xec\x00\x87\x4c\x64\xe9\xe9\x49\x79\x91\xcc\xff\x7b\xff\xf1\xf9\xf3\xd7\x4f\x1f\x48\xed\x1b\x58\xcf\x78\x78\x91\xb6\xa2\xc2\x98\x55\xba\xb9\x3c\x83\x32\x46\xb5\x95\x4b\xd7\xb3\x84\xd7\x52\x94\xf8\x4e\xb8\x57\x1e\xe4\x7a\x73\x21\x53\x9c\x6c\x44\x2b\x2a\x69\x39\x1b\x62\x01\x05\xaa\x3d\x10\x2b\x61\x95\x3a\x7f\x01\xe9\x6a\x29\x7d\x4a\x6a\x2b\x77\xab\x94\xb1\x46\x9c\x8b\xb2\xcd\xb6\x5a\x7b\xe7\xad\x30\xe1\x50\xe8\x86\x4d\x0e\xb6\xcc\x96\x59\xce\x0a\xe7\xae\xbe\xac\x51\x88\x72\x7d\x3b\x09\x77\x85\x55\xc6\x13\x67\x8b\x40\x88\x04\x7b\x97\x15\xa0\xbb\x72\x07\xc2\xca\x9e\x4d\xec\xc5\x99\x81\xda\x3a\x26\xda\xaa\x43\x77\xb6\x77\x2c\x47\xe2\x37\x93\x23\x50\xee\x91\x91\xb3\x81\xef\x8f\xa9\x69\xa7\xa8\xd5\x9d\x97\x96\xcd\xb3\x45\x96\x2f\x5f\x06\x5e\x51\x2c\xe6\xec\x14\x48\xda\x19\xd0\xa2\xfc\x07\x2d\x82\x2e\x85\xab\xc3\xc7\x2f\xb2\x07\x54\x75\x3c\xff\x3d\x71\xa3\x1b\xd9\xfa\x81\xf8\x31\x9b\xc7\xf3\x2b\xbe\xd3\x98\x3b\x88\x30\x28\xc1\x4a\xb0\x4c\xeb\x85\x6a\xa5\x25\xdf\xc2\x39\xc1\x79\xa1\x27\x55\xfa\xfa\x89\x3c\x3e\xcc\xcd\xf9\x6d\xf0\x7e\xef\xa1\x38\x1e\x07\xaa\xda\x9d\x1e\xa1\x23\x2c\x9f\xdf\xc2\x0a\x1c\x56\x1a\x68\xb1\xc1\x88\xac\x95\x97\xd4\x19\x51\xc8\x27\x62\xac\xa4\x27\x1c\xb2\x29\x05\x5b\x1b\xfb\xe1\x6c\x98\x7d\xb4\xb6\xba\xbc\xf4\xbd\x96\xea\x48\x0a\x10\xce\xad\xd2\xa9\xd7\x7e\x2e\x6f\x42\x21\x2f\xfa\x13\xde\x8a\xe3\x60\x25\xbc\x83\x08\x41\x27\xc1\x87\x1a\x05\xe0\x88\xe9\x00\xa8\x55\x55\xed\xc7\xa4\x7e\x93\xa2\x99\x10\x2e\xc6\x15\xfa\x3f\xac\xc5\x21\x28\xa8\x22\x53\x05\x17\x53\x2b\xec\x86\x4c\x16\x0d\xa0\xa0\xb2\x5a\x93\x77\x01\xcf\x99\x98\x78\xd9\x95\xf8\x57\x35\x86\x09\xfc\x6d\x95\x01\x36\xd6\xf9\x32\xe4\xdc\xaf\xc4\x59\x07\xa3\x1a\x6c\x92\x83\xd7\x79\x64\xf7\xf2\xec\x69\x83\xcb\x82\x6c\xf7\x6f\x98\x3a\x1f\x54\x66\x28\xf3\x0b\xbd\xad\x3e\x45\xb1\x6f\x7e\x10\x50\xa8\x68\xbe\x88\x9a\xf6\x41\x5c\xcb\xa3\x92\xa7\xf5\x95\xe9\x67\xd2\x68\x45\x83\xb3\xe1\xd7\xcf\xb0\x83\xfe\xb2\xfc\x11\x00\x00\xff\xff\xc8\xc8\x83\x64\x3d\x05\x00\x00")

func index_html_bytes() ([]byte, error) {
	return bindata_read(
		_index_html,
		"index.html",
	)
}

func index_html() (*asset, error) {
	bytes, err := index_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "index.html", size: 1341, mode: os.FileMode(420), modTime: time.Unix(1421508519, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _uploads_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\xc1\x6e\xe2\x30\x14\x3c\xc3\x57\x3c\x79\x2f\xbb\x87\x24\xd2\x9e\x4d\x0e\xbb\x55\x25\x0e\xed\xa5\xf4\x03\x9c\xd8\x24\x8f\x1a\x3b\xb2\x5f\x10\x29\xe5\xdf\x6b\x9b\x24\x02\xb5\xaa\xb8\xc0\xd8\x9e\xf1\xcc\x1b\x87\x4b\x3c\x94\xcb\x05\x6f\xff\x96\xaf\x9d\xb6\x42\x7a\x5e\x04\x1c\x76\xc2\x01\xd4\x5a\x78\xbf\x62\xbb\x7e\x5f\x59\x72\xd6\x30\x30\x87\x6c\x8b\x5a\x65\xd2\xd9\x0e\xfa\xa4\x50\x6e\xc5\x26\xc4\x82\x72\xc1\x71\x12\x36\x7a\xe8\x5a\xac\xad\x81\x19\x65\x68\xb6\x36\xf3\xd8\x18\x56\xf2\x02\x6f\xf9\xa4\x8e\x94\xed\x7b\x52\x92\x95\x1b\x3b\xde\x0f\x02\xd8\xd3\x00\xff\x35\x76\x1d\x9a\xc6\xe7\x74\x24\x06\x31\x05\xec\x7a\x4f\x90\xa2\x20\x41\x70\xa1\x16\x3d\x08\xa7\x44\x7e\xb9\x9a\x17\xe3\x78\x24\xaa\x40\x9f\x5c\xd2\x22\xfd\x66\x9e\x1c\x76\xd1\x2e\xe6\xa0\x56\x09\x19\x51\x80\x2e\xfd\xc7\xbd\x72\xfd\xc0\x0b\x92\xf3\xfa\x26\xac\xc3\xa6\x25\x56\xfe\xb3\xf6\xcd\xc3\xaf\xc0\x6b\x7f\xe4\xcd\x43\xdc\xc1\x7d\x8c\x13\xbe\xe0\xbb\x9a\xdd\x03\x48\xb1\xa2\x74\x4c\xca\xa9\xb2\x72\x98\x32\x83\x69\x32\xa7\x3a\x25\x28\x3c\x09\xa0\x19\x1b\xf4\xb9\xd7\x58\xab\xdf\x7f\x72\xa7\x0e\xca\xf9\x80\x58\xa4\x8e\xa6\x7d\x5e\x6b\x36\x45\x91\x5f\x0e\x4e\xa7\x3e\x5f\xcb\xf3\xf9\xba\x04\xf9\x5d\xe0\x48\x4c\x45\x3c\xdb\x3b\xd9\x73\x1d\x1b\x4b\x42\xdf\x2d\x8b\xcd\xc4\x62\xe0\x03\xaa\x81\x94\xbf\x92\x5d\x55\x34\x16\x13\x50\x7c\xe9\x72\x79\xf9\x18\x3e\x03\x00\x00\xff\xff\x52\xe2\x5a\xd7\xf1\x02\x00\x00")

func uploads_html_bytes() ([]byte, error) {
	return bindata_read(
		_uploads_html,
		"uploads.html",
	)
}

func uploads_html() (*asset, error) {
	bytes, err := uploads_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "uploads.html", size: 753, mode: os.FileMode(420), modTime: time.Unix(1421506083, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"angular-file-upload.min.js": angular_file_upload_min_js,
	"app.js": app_js,
	"books.html": books_html,
	"clippings.html": clippings_html,
	"index.html": index_html,
	"uploads.html": uploads_html,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"angular-file-upload.min.js": &_bintree_t{angular_file_upload_min_js, map[string]*_bintree_t{
	}},
	"app.js": &_bintree_t{app_js, map[string]*_bintree_t{
	}},
	"books.html": &_bintree_t{books_html, map[string]*_bintree_t{
	}},
	"clippings.html": &_bintree_t{clippings_html, map[string]*_bintree_t{
	}},
	"index.html": &_bintree_t{index_html, map[string]*_bintree_t{
	}},
	"uploads.html": &_bintree_t{uploads_html, map[string]*_bintree_t{
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

